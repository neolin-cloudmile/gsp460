##Configure managementent
## Create a new configuration and define managementent.

1. Name the new file managementent.tf in the tfnet folder:

cd tfnet
vi managementent.tf

2. Copy the following base code into managementent.tf:

# Create the managementnet network
resource [RESOURCE_TYPE] "managementnet" {
  name = [RESOURCE_NAME]
  #RESOURCE properties go here
}

3. In managementent.tf, replace [RESOURCE_TYPE] with "google_compute_network".

4. In managementent.tf, replace [RESOURCE_NAME] with "managementent".

5. Add the following property to managementent.tf:
auto_create_subnetworks = "false"

6. Verify that management.tf looks like this:

# Create the managementnet network
resource "google_compute_network" "managementnet" {
  name = "managementnet"
  auto_create_subnetworks = "false"
}

##Add a subnet to managementent
## Add managementsubnet-us to the VPC network.

1.Add the following resource to managementnet.tf:

# Create managementsubnet-us subnetwork
resource "google_compute_subnetwork" "managementsubnet-us" {
  name          = "managementsubnet-us"
  region        = "us-central1"
  network       = "${google_compute_network.managementnet.self_link}"
  ip_cidr_range = "10.130.0.0/20"
}

##Configre the firewall rule
## Define a firewall rule to allow HTTP, SSH, and RDP traffic on managementnet.

1. Add the following base code to managementnet.tf:

# Add a firewall rule to allow HTTP, SSH, and RDP traffic on managementnet
resource [RESOURCE_TYPE] "managementnet-allow-http-ssh-rdp-icmp" {
  name = [RESOURCE_NAME]
  #RESOURCE properties go here
}

2. In managementent.tf, replace [RESOURCE_TYPE] with "google_compute_firewall"

3. In managementnet.tf, replace [RESOURCE_NAME] with "managementnet-allow-http-ssh-rdp-icmp".

4. Add the following property to managementnet.tf:

network = "${google_compute_network.managementnet.self_link}"

5. Add the following properties to managementnet.tf:

allow {
    protocol = "tcp"
    ports    = ["22", "80", "3389"] 
}
allow {
    protocol = "icmp"
}

6. Verify that your additions to managementnet.tf look like this:

# Add a firewall rule to allow HTTP, SSH, and RDP traffic on managementnet
resource "google_compute_firewall" "managementnet-allow-http-ssh-rdp-icmp" {
  name = "managementnet-allow-http-ssh-rdp-icmp"
  network = "${google_compute_network.managementnet.self_link}"
  allow {
      protocol = "tcp"
      ports    = ["22", "80", "3389"] 
  }
  allow {
      protocol = "icmp"
  }
}

##Configure the VM instance
## Define the VM instance by creating a VM instance module. A module is a reusable configuration inside a folder. You will use this module for all VM instances of this lab.

1. To create a new folder inside tfnet, select the tfnet folder, and name the new folder instance.

cd tfnet
mkdir instance

2. Name the new file main.tf in the instance folder.

vi main.tf

3. Copy the following base code into main.tf:

resource [RESOURCE_TYPE] "vm_instance" {
  name = [RESOURCE_NAME]
  #RESOURCE properties go here
}

4. In main.tf, replace [RESOURCE_TYPE] with "google_compute_instance".

5. In main.tf, replace [RESOURCE_NAME] with "${var.instance_name}"

6. Add the following properties to main.tf:

zone         = "${var.instance_zone}"
machine_type = "${var.instance_type}"

7. Add the following properties to main.tf:

boot_disk {
  initialize_params {
    image = "debian-cloud/debian-9"}
}

8.Add the following properties to main.tf:

network_interface {
  subnetwork = "${var.instance_subnetwork}"
  access_config {
    # Allocate a one-to-one NAT IP to the instance
  }
}

9.Define the 4 input variables at the top of main.tf and verify that main.tf looks like this, including brackets {}:

variable "instance_name" {}
variable "instance_zone" {}
variable "instance_type" {
  default = "n1-standard-1"
}
variable "instance_subnetwork" {}

resource "google_compute_instance" "vm_instance" {
  name         = "${var.instance_name}"
  zone         = "${var.instance_zone}"
  machine_type = "${var.instance_type}"
  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-9"
    }
  }
  network_interface {
    subnetwork = "${var.instance_subnetwork}"
    access_config {
      # Allocate a one-to-one NAT IP to the instance
    }
  }
}

10. Add the following VM instance to managementnet.tf:

# Add the managementnet-us-vm instance
module "managementnet-us-vm" {
  source           = "./instance"
  instance_name    = "managementnet-us-vm"
  instance_zone    = "us-central1-a"
  instance_subnetwork = "${google_compute_subnetwork.managementsubnet-us.self_link}"
}

##Create managementent and its resources
## It's time to apply the managementnet configuration.

1. Rewrite the Terraform configurations files to a canonical format and style by running the following command:

terraform fmt

2. Initialize Terraform by running the following command:

terraform init

3. Create an execution plan by running the following command:

terraform plan

4. Apply the desired changes by running the following command:

terraform apply

5. Confirm the planned actions by typing:

yes

##Verify managementnet and its resources
## In the GCP Console, verify that the resources were created.

1. In the GCP Console, select Navigation menu > VPC network > VPC networks.
2. View the managementnet VPC network with its subnetwork.
3. In the left pane, click Firewall Rules. View the managementnet_allow_http_ssh_rdp_icmp firewall rule for the VPC network that was created.
4. Select Navigation menu > Compute Engine > VM instances.

